@using PagedList.Mvc;
@using PagedList;

@model IPagedList<Sivas.Models.Products>

@{
    ViewBag.Title = "Category";
}

@*@Html.ActionLink("Create New", "Create")*@

@section styles{
    <link href="~/Content/customLand.css" rel="stylesheet" />
    <link href="~/Content/customPort.css" rel="stylesheet" />
}
<script type="text/javascript">
    function GoToRoom(id) {
        window.location = '@Html.Raw(@Url.Action("Details", "Products"))' + '?id=' + id;
    }
</script>

<h2>Index</h2>
<div class="ProductContainer">
    @foreach (var item in Model)
    {
        <div class="product">
            <div class="Overlap"><span class="Text" @("onclick=GoToRoom('" + item.Id + "')")>More Details</span></div>
            <div @(item.Landscape == true ? "class=product_ImageLand" : "class=product_ImagePort")>
                @{
                    var message = item.Category + " " + item.Model;
                }
                <img src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(item.Image))" @(item.Landscape == true ? "class=product_ImageLand" : "class=product_ImagePort") alt="@message" />
            </div>
            <div @(item.Landscape == true ? "class=product_DescriptionLand" : "class=product_DescriptionPort")>
                @*<span class="Category">@Html.DisplayFor(model => item.Category)</span>*@
                <span class="Company">@Html.DisplayFor(model => item.Company)</span>
                <span class="Brand">@Html.DisplayFor(model => item.Brand)</span>
                <span class="Model">@Html.DisplayFor(model => item.Model)</span>
                @*<span class="Image">@Html.DisplayFor(model => item.Image)</span>*@
                @*<span class="Landscape">@Html.DisplayFor(model => item.Landscape)</span>*@
                @*<span class="EneryStar">@Html.DisplayFor(model => item.EnergyStar)</span>*@
                <span class="EneryStar">
                    @{
                        if (item.Landscape)
                        {
                            if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Five)
                            {
                                <img src="~/image/EnergyStarLand/FiveStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Four)
                            {
                                <img src="~/image/EnergyStarLand/FourStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Three)
                            {
                                <img src="~/image/EnergyStarLand/ThreeStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Two)
                            {
                                <img src="~/image/EnergyStarLand/TwoStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.One)
                            {
                                <img src="~/image/EnergyStarLand/OneStar.png" />
                            }
                        }
                        else
                        {
                            if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Five)
                            {
                                <img src="~/image/EnergyStarPort/FiveStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Four)
                            {
                                <img src="~/image/EnergyStarPort/FourStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Three)
                            {
                                <img src="~/image/EnergyStarPort/ThreeStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.Two)
                            {
                                <img src="~/image/EnergyStarPort/TwoStar.png" />
                            }
                            else if (item.EnergyStar == Sivas.Models.ProductEnergyStar.One)
                            {
                                <img src="~/image/EnergyStarPort/OneStar.png" />
                            }
                        }
                    }
                </span>
                <span class="Price">@Html.DisplayFor(model => item.Price)</span>
                @{
                    if (item.Offer)
                    {
                        if (item.Landscape)
                        {
                            <span class="Offer">
                                <img src="~/image/EnergyStarLand/Offer.png" />
                            </span>
                        }
                        else
                        {
                            <span class="Offer">
                                <img src="~/image/EnergyStarPort/Offer.png" />
                            </span>
                        }
                    }
                }

                <span class="Color">@Html.DisplayFor(model => item.Color)</span>
                <span class="Specification">
                    @{
                        var displaySpecification = "<ul><li>";
                        if (item.Specification.Contains("~"))
                        {
                            displaySpecification += item.Specification.Replace("~", "</li><li>");
                        }
                        else
                        {
                            displaySpecification += item.Specification;
                        }
                        displaySpecification += "</li></ul>";
                        item.Specification = displaySpecification;
                    }
                    @Html.Raw(Server.HtmlDecode(item.Specification))
                </span>
                <span class="Description">@Html.DisplayFor(model => item.Description)</span>
            </div>
        </div>
                        }
</div>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded });