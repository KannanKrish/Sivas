@model Product
@{
    ViewBag.Title = "Details";
    const string imageRoot = "~/image";
    const string imageExtension = ".png";
    var imageFolder = Model.Landscape switch
    {
        true => "EnergyStarLand",
        false => "EnergyStarPort"
    };
}

<div class="ProductContainer" itemscope itemtype="http://schema.org/Product">
    <div class="product">
        <div @(Model.Landscape ? "class=product_ImageLand" : "class=product_ImagePort")>
            @{
                var message = Model.Category + " " + Model.Model;
            }
            <img @(Model.Landscape ? "class=product_ImageLand" : "class=product_ImagePort") alt="@message" itemprop="image" src="@($"data:image/gif;base64,{Convert.ToBase64String(Model.Image)}")" />
        </div>
        <div @(Model.Landscape ? "class=product_DescriptionLand" : "class=product_DescriptionPort")>
            <span class="Category">@Html.DisplayFor(model => model.Category)</span>
            <span class="Company">@Html.DisplayFor(model => model.Company)</span>
            <span class="Model" itemprop="name">@Html.DisplayFor(model => model.Model)</span>
            <span class="Brand">@Html.DisplayFor(model => model.Brand)</span>
            @*<span class="Image">@Html.DisplayFor(model => model.Image)</span>*@
            @*<span class="Landscape">@Html.DisplayFor(model => model.Landscape)</span>*@
            <span class="EneryStar">
                @{
                    var productStar = Model.EnergyStar.GetEnergyStar();
                    if (productStar != "")
                    {
                        <img src="@($"{imageRoot}/{imageFolder}/{productStar}{imageExtension}")" alt="" />
                    }
                }
            </span>
            <span itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                <span class="Price" itemprop="offers">@Html.DisplayFor(model => model.Price)</span>
            </span>
            @{
                if (Model.Offer)
                {
                    <span class="Offer">
                        <img src="@($"{imageRoot}/{imageFolder}/Offer.png")" alt="" />
                    </span>
                }
            }
            <span class="Color">@Html.DisplayFor(model => model.Color)</span>
            <span class="Specification">
                @{
                    var displaySpecification = "<ul><li>";
                    if (Model.Specification.Contains("~"))
                    {
                        displaySpecification += Model.Specification.Replace("~", "</li><li>");
                    }
                    else
                    {
                        displaySpecification += Model.Specification;
                    }
                    displaySpecification += "</li></ul>";
                    Model.Specification = displaySpecification;
                }
                @Html.HtmlRaw(Model.Specification))
            </span>
            <span class="Description" itemprop="description">@Html.DisplayFor(model => model.Description)</span>
        </div>
    </div>
</div>
<div style="clear:left">
    <p>
        @{
            if (Context.User.Identity is { IsAuthenticated: true })
            {
                <h2>@Html.ActionLink("Edit Current Item", "Edit", new { id = Model.Id })</h2>
                <h2>@Html.ActionLink("Delete Current Item", "Delete", new { id = Model.Id })</h2>
            }
        }
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>