@model IEnumerable<Sivas.Models.Products>

@{
    ViewBag.Title = "Index";
}
@*<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Company)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Model)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Landscape)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EnergyStar)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Offer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Color)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Specification)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Company)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Brand)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Model)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Image)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Landscape)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EnergyStar)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Offer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Color)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Specification)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@


@section styles{
    @*@if (Model[0].Model.Landscape == true)
        {
            < link href = "~/Content/customLand.css" rel = "stylesheet" />
        }
        else
        {
            < link href = "~/Content/customPort.css" rel = "stylesheet" />
        }*@
    <link href="~/Content/customLand.css" rel="stylesheet" />
    <link href="~/Content/customPort.css" rel="stylesheet" />
}
<script type="text/javascript">
    function GoToRoom(id) {
        window.location = "/Sivas/Products/Details?id=" + id;
    }
</script>

<h2>Index</h2>
<div class="ProductContainer">
    @foreach (var item in Model)
    {
        <div class="product" @("onclick=GoToRoom('" + item.Id + "')")>
            <div @(item.Landscape == true ? "class=product_ImageLand" : "class=product_ImagePort")>
                @{
                    var message = item.Category + " " + item.Model;
                }
                <img src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(item.Image))" @(item.Landscape == true ? "class=product_ImageLand" : "class=product_ImagePort") alt="@message" />
            </div>
            <div @(item.Landscape == true ? "class=product_DescriptionLand" : "class=product_DescriptionPort")>
                <span class="Brand">@Html.DisplayFor(model => item.Category)</span>
                <span class="Model">@Html.DisplayFor(model => item.Brand)</span>
                <span class="EneryStar">@Html.DisplayFor(model => item.EnergyStar)</span>
                <span class="Color">@Html.DisplayFor(model => item.Color)</span>
                <span class="Specification">
                    @{
                        var displaySpecification = "<ul><li>";
                        if (item.Specification.Contains("~"))
                        {
                            displaySpecification += item.Specification.Replace("~", "</li><li>");
                        }
                        else
                        {
                            displaySpecification += item.Specification;
                        }
                        displaySpecification += "</li></ul>";
                        item.Specification = displaySpecification;
                    }
                    @Html.Raw(Server.HtmlDecode(item.Specification))
                </span>
            </div>
        </div>
                        }
</div>